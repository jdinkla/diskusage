<?xml version="1.0"?>
<!-- ====================================================================== 
    11.06.2007 20:30:00                                                     

    Disk Usage Tool    

	Copyright (C) 2007 Joern Dinkla, www.dinkla.net, joern@dinkla.net

	This program is free software; you can redistribute it and/or
	modify it under the terms of the GNU General Public License
	as published by the Free Software Foundation; either version 2
	of the License, or (at your option) any later version.

	This program is distributed in the hope that it will be useful,
	but WITHOUT ANY WARRANTY; without even the implied warranty of
	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
	GNU General Public License for more details.

	You should have received a copy of the GNU General Public License
	along with this program; if not, write to the Free Software
	Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA
	     
     ====================================================================== -->
<project name="net.dinkla.diskusage" default="build">
    <description>
		Disk Usage Tool
    </description>

	<property environment="env" />
	<property file="build.properties" />
	
	<!-- classpath.cobertura -->
	<path id="classpath.cobertura">
		<fileset dir="${cobertura.dir}">
		        <include name="cobertura.jar" />
		        <include name="lib/**/*.jar" />
		</fileset>
    </path>
	
	<!-- classpath.compile -->
    <path id="classpath.compile">
		<pathelement path="${junit.jar}/" />
    	<pathelement path="${jcommon.jar}" />
    	<pathelement path="${jfreechart.jar}" />
        <pathelement path="${classes.dir}" />
    </path>

	<!-- classpath.junit -->
    <path id="classpath.junit">
		<pathelement path="${junit.jar}/" />
    	<pathelement path="${jcommon.jar}" />
    	<pathelement path="${jfreechart.jar}" />
		<pathelement path="${groovy.jar}" />
        <pathelement path="${instrumented.dir}" />
        <pathelement path="${classes.dir}" />
    </path>
	
	<!-- classpath.groovy -->
    <path id="classpath.groovy">
		<pathelement path="${groovy.jar}/" />
    	<pathelement path="${commons-cli.jar}" />
    </path>

	<taskdef classpathref="classpath.cobertura" resource="tasks.properties"/>
	<taskdef name="groovy" classname="org.codehaus.groovy.ant.Groovy" classpath="${groovy.jar}"/>
	<taskdef name="groovyc" classname="org.codehaus.groovy.ant.Groovyc" classpathref="classpath.groovy"/>

	<!-- ================================= 
          target: clean              
         ================================= -->
    <target name="clean" depends="" description="Cleans the project.">
        <delete dir="${classes.dir}" failonerror="false"/>
        <delete dir="${instrumented.dir}" failonerror="false"/>
        <delete dir="${reports.dir}" failonerror="false"/>
    	<delete dir="${delivery.dir}" failonerror="false"/>
    	<delete dir="${build.dir}" failonerror="false"/>
        <delete file="cobertura.log" failonerror="false"/>
        <delete file="cobertura.ser" failonerror="false"/>
    </target>
	
	<!-- ================================= 
          target: init              
         ================================= -->
    <target name="init" depends="" description="Initializes the directory structure">
    	<mkdir dir="${build.dir}" />
    	<mkdir dir="${classes.dir}" />
    	<mkdir dir="${instrumented.dir}"/>
        <mkdir dir="${reports.xml.dir}" />
        <mkdir dir="${reports.html.dir}" />
        <mkdir dir="${coverage.xml.dir}" />
        <mkdir dir="${coverage.html.dir}" />
    	<mkdir dir="${delivery.dir}" />
    </target>

    <!-- ================================= 
          target: compile  
         ================================= -->
    <target name="compile" depends="init" description="Compiles the Java and Groovy classes">
    	<javac fork="true" srcdir="${src.dir}" destdir="${classes.dir}" debug="true" target="${java.target}">
 			<classpath refid="classpath.compile" />
		</javac>
    	<javac fork="true" srcdir="${test.dir}" destdir="${classes.dir}" debug="true" target="${java.target}">
 			<classpath refid="classpath.compile" />
   		</javac>
    	<groovyc srcdir="${src.dir}" destdir="${classes.dir}" stacktrace="true" verbose="true">
 			<classpath refid="classpath.compile" />
		</groovyc>
    	<groovyc srcdir="${test.dir}" destdir="${classes.dir}" stacktrace="true" verbose="true">
			<classpath refid="classpath.compile" />
		</groovyc>
    </target>

	<!-- ================================= 
          target: instrument              
         ================================= -->
    <target name="instrument" depends="compile" description="Runs cobertura test coverage">
    	<delete file="${cobertura.ser}" />
    	
    	<!--delete dir="${instrumented.dir}" /-->
    	<cobertura-instrument todir="${instrumented.dir}" datafile="${cobertura.ser}">
    		<fileset dir="${classes.dir}">
	            <include name="**/*.class" />
	            <exclude name="**/*Test.class" />
	            <exclude name="**/*Test$_*.class" />
            </fileset>
    	</cobertura-instrument>
    </target>
	
	<!-- ================================= 
          target: test.unit              
         ================================= -->
    <target name="test.unit" depends="compile" description="Runs the JUnit tests">
        <junit fork="true" errorproperty="test.failed" failureproperty="test.failed">
        	<sysproperty key="net.sourceforge.cobertura.datafile" file="${cobertura.ser}" />
        	<classpath refid="classpath.junit" />
			<classpath refid="classpath.cobertura" />
            <formatter type="brief" usefile="false"/>
            <formatter type="xml" />
            <batchtest todir="${reports.xml.dir}">
            	<fileset dir="${classes.dir}">
					<include name="**/*Test.class" />
				</fileset>
			</batchtest>
         </junit>

    	 <junitreport todir="${reports.xml.dir}">
	        <fileset dir="${reports.xml.dir}">
	            <include name="TEST-*.xml" />
            </fileset>
            <report format="frames" todir="${reports.html.dir}" />
	    </junitreport>

    	<fail message="JUnit tests failed! Check test reports" if="test.failed" />
	</target>

	<!-- ================================= 
          target: report              
         ================================= -->
    <target name="report" depends="instrument,test.unit" description="Creates cobertura reports">
        <cobertura-report srcdir="${src.dir}" destdir="${coverage.html.dir}" datafile="${cobertura.ser}">
            <fileset dir="${src.dir}">
            	<include name="**/*.java" />
				<include name="**/*.groovy" />
           	</fileset>
        </cobertura-report>
        <cobertura-report srcdir="${src.dir}" destdir="${coverage.xml.dir}" format="xml" datafile="${cobertura.ser}">
            <fileset dir="${src.dir}">
            	<include name="**/*.java" />
				<include name="**/*.groovy" />
           	</fileset>
        </cobertura-report>
    </target>

	<!-- ================================= 
          target: jar              
         ================================= -->
    <target name="jar" depends="" description="Creates a jar file">
	    <jar destfile="${delivery.dir}/${delivery.name}.jar">
	        <fileset dir="${classes.dir}" casesensitive="yes" />
            <manifest>
	            <attribute name="Built-By" value="Joern Dinkla, www.dinkla.net" />
                <attribute name="Main-Class" value="net.dinkla.diskusage.DiskUsage" />
                <attribute name="Class-Path" value="${groovy.jar} ${jfreechart.jar} ${jcommon.jar}"/>
            </manifest>
	    </jar>
	    <zip destfile="${delivery.dir}/${delivery.name}-src.zip">
	        <fileset dir="${src.dir}/.." casesensitive="yes">
	        	<exclude name="bin-groovy/**"/>
	        	<exclude name="build/**"/>
	        </fileset>
	    </zip>
    </target>

    <!-- ================================= 
          target: dev              
         ================================= -->
    <target name="dev" depends="report,jar" description="Builds it (development).">
    </target>

    <!-- ================================= 
          target: build              
         ================================= -->
    <target name="build" depends="test.unit,jar" description="Builds it.">
    </target>

    <!-- ================================= 
          target: delivery              
         ================================= -->
    <target name="delivery" depends="test.unit,jar" description="Builds the delivery">
    	<mkdir dir="${delivery.dir}/lib" />
        <copy file="${groovy.jar}" todir="${delivery.dir}/lib" />
    	<copy file="${jfreechart.jar}" todir="${delivery.dir}/lib" />
    	<copy file="${jcommon.jar}" todir="${delivery.dir}/lib" />
    	<copy file="scripts/diskusage.bat" todir="${delivery.dir}" />
    	<copy file="scripts/diskusage.sh" todir="${delivery.dir}" />
    	<copy file="scripts/license-GPL.txt" todir="${delivery.dir}" />
    	<copy file="scripts/license-LGPL.txt" todir="${delivery.dir}" />
    	<copy file="scripts/README.txt" todir="${delivery.dir}" />
		<zip destfile="${delivery.dir}/../${delivery.name}.zip">
			 <zipfileset dir="${delivery.dir}" prefix="${delivery.name}"/>
		</zip>
    </target>

</project>
